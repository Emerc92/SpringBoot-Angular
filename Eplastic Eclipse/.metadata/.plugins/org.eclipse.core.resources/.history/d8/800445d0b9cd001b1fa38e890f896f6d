package it.wibs.eplastic.entities;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = "orders")
public class OrderEntity implements Serializable {
	
	@Id
	@Column(name ="ORDER_ID")
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long orderId;
	
	@Column(name ="BINDCOMMERCE_NUMBER")
	private long bindCommerceNumber;
	
	@Column(name ="DOCUMENT_TYPE")
	private String documentType;
	
	@Column(name ="NODE_CHANNEL")
	private String nodeChannel;

	@Column(name ="NODE_ID")
	private int nodeId;
	
	@Column(name ="TECHNOLOGY")
	private String Technology;
	
	@Column(name ="MARKET")
	private String market;
	
	@Column(name ="CREATION_DATE")
	private Date creationDate;
	
	@Column(name ="LAST_UPDATE")
	private Date lastUpdate;
	
	@Column(name ="STATE_BIND_ID")
	private int stateBindId;
	
	@Column(name ="ORDER_STATE_CODE")
	private String orderStateCode;
	
	@Column(name ="ORDER_STATE_NAME")
	private String orderStateName;
	
	@Column(name ="CUSTOMER_CODE")
	private int customerCode;
	
	@Column(name ="DELIVERY_ADDRESS")
	private String deliveryAddress;
	
	@Column(name ="PAYMENT_NAME")
	private String paymentName;
	
	@Column(name ="PAYMENT_CODE")
	private String paymentCode;
	
	@Column(name ="PAYMENT_TOTAL")
	private double paymentTotal;
	
	@Column(name ="PAYMENT_STATUS")
	private String paymentStatus;
	
	@Column(name ="PAID_TIME")
	private Date paidTime;
	
	@Column(name ="AMMOUNT_TOTAL_WITHOUT_TAX")
	private double ammount_totalWithoutTax;
	
	@Column(name ="VAT_AMMOUNT")
	private double vatAmmount;
	
	@Column(name ="TOTAL")
	private double total;

	@Column(name ="CURRENCY")
	private String currency;
	
	@Column(name ="SHIPPING_COST")
	private double shippingCost;
	
	@Column(name = "SHIPPING_COST_WITHOUT_TAX")
	private double ShippingCostWithoutTax;
	
	@Column(name ="SHIPPING_TAX")
	private double shippingTax;
	
	@Column(name ="INTERNAL_COMMENT")
	private String InternalComment;
	
	@Column(name ="SELLER_NOTE")
	private String sellerNote;
	
	@Column(name ="COUPON_DISCOUNT")
	private double CouponDiscount;
	
	@Column(name ="COUPON_CODE")
	private String couponCode;
	
	@Column(name ="TOTAL_ORDER_ITEMS")
	private int numberOfItems;
	
	@Column(name ="TRACKING_NUMBER")
	private long TrackingNumber;

	@Column(name ="COMMISSION_ID")
	private long commissionId;

	public long getOrderId() {
		return orderId;
	}

	public void setOrderId(long orderId) {
		this.orderId = orderId;
	}

	public long getBindCommerceNumber() {
		return bindCommerceNumber;
	}

	public void setBindCommerceNumber(long bindCommerceNumber) {
		this.bindCommerceNumber = bindCommerceNumber;
	}

	public String getDocumentType() {
		return documentType;
	}

	public void setDocumentType(String documentType) {
		this.documentType = documentType;
	}

	public String getNodeChannel() {
		return nodeChannel;
	}

	public void setNodeChannel(String node_channel) {
		this.nodeChannel = node_channel;
	}

	public int getNodeId() {
		return nodeId;
	}

	public void setNodeId(int nodeId) {
		this.nodeId = nodeId;
	}

	public String getTechnology() {
		return Technology;
	}

	public void setTechnology(String technology) {
		Technology = technology;
	}

	public String getMarket() {
		return market;
	}

	public void setMarket(String market) {
		this.market = market;
	}

	public Date getCreationDate() {
		return creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	public Date getLastUpdate() {
		return lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	public int getStateBindId() {
		return stateBindId;
	}

	public void setStateBindId(int stateBindId) {
		this.stateBindId = stateBindId;
	}

	public String getOrderStateCode() {
		return orderStateCode;
	}

	public void setOrderStateCode(String orderStateCode) {
		this.orderStateCode = orderStateCode;
	}

	public String getOrderStateName() {
		return orderStateName;
	}

	public void setOrderStateName(String orderStateName) {
		this.orderStateName = orderStateName;
	}

	public int getCustomerCode() {
		return customerCode;
	}

	public void setCustomerCode(int customerCode) {
		this.customerCode = customerCode;
	}

	public String getDeliveryAddress() {
		return deliveryAddress;
	}

	public void setDeliveryAddress(String deliveryAddress) {
		this.deliveryAddress = deliveryAddress;
	}

	public String getPaymentName() {
		return paymentName;
	}

	public void setPaymentName(String paymentName) {
		this.paymentName = paymentName;
	}

	public String getPaymentCode() {
		return paymentCode;
	}

	public void setPaymentCode(String paymentCode) {
		this.paymentCode = paymentCode;
	}

	public double getPaymentTotal() {
		return paymentTotal;
	}

	public void setPaymentTotal(double paymentTotal) {
		this.paymentTotal = paymentTotal;
	}

	public String getPaymentStatus() {
		return paymentStatus;
	}

	public void setPaymentStatus(String paymentStatus) {
		this.paymentStatus = paymentStatus;
	}

	public Date getPaidTime() {
		return paidTime;
	}

	public void setPaidTime(Date paidTime) {
		this.paidTime = paidTime;
	}

	public double getAmmount_totalWithoutTax() {
		return ammount_totalWithoutTax;
	}

	public void setAmmount_totalWithoutTax(double ammount_totalWithoutTax) {
		this.ammount_totalWithoutTax = ammount_totalWithoutTax;
	}

	public double getVatAmmount() {
		return vatAmmount;
	}

	public void setVatAmmount(double vatAmmount) {
		this.vatAmmount = vatAmmount;
	}

	public double getTotal() {
		return total;
	}

	public void setTotal(double total) {
		this.total = total;
	}

	public String getCurrency() {
		return currency;
	}

	public void setCurrency(String currency) {
		this.currency = currency;
	}

	public double getShippingCost() {
		return shippingCost;
	}

	public void setShippingCost(double shippingCost) {
		this.shippingCost = shippingCost;
	}

	public double getShippingCostWithoutTax() {
		return ShippingCostWithoutTax;
	}

	public void setShippingCostWithoutTax(double shippingCostWithoutTax) {
		ShippingCostWithoutTax = shippingCostWithoutTax;
	}

	public double getShippingTax() {
		return shippingTax;
	}

	public void setShippingTax(double shippingTax) {
		this.shippingTax = shippingTax;
	}

	public String getInternalComment() {
		return InternalComment;
	}

	public void setInternalComment(String internalComment) {
		InternalComment = internalComment;
	}

	public String getSellerNote() {
		return sellerNote;
	}

	public void setSellerNote(String sellerNote) {
		this.sellerNote = sellerNote;
	}

	public double getCouponDiscount() {
		return CouponDiscount;
	}

	public void setCouponDiscount(double couponDiscount) {
		CouponDiscount = couponDiscount;
	}

	public String getCouponCode() {
		return couponCode;
	}

	public void setCouponCode(String couponCode) {
		this.couponCode = couponCode;
	}

	public int getNumberOfItems() {
		return numberOfItems;
	}

	public void setNumberOfItems(int numberOfItems) {
		this.numberOfItems = numberOfItems;
	}

	public long getTrackingNumber() {
		return TrackingNumber;
	}

	public void setTrackingNumber(long trackingNumber) {
		TrackingNumber = trackingNumber;
	}

	public long getCommissionId() {
		return commissionId;
	}

	public void setCommissionId(long commissionId) {
		this.commissionId = commissionId;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("OrderEntity [orderId=");
		builder.append(orderId);
		builder.append(", bindCommerceNumber=");
		builder.append(bindCommerceNumber);
		builder.append(", documentType=");
		builder.append(documentType);
		builder.append(", nodeChannel=");
		builder.append(nodeChannel);
		builder.append(", nodeId=");
		builder.append(nodeId);
		builder.append(", Technology=");
		builder.append(Technology);
		builder.append(", market=");
		builder.append(market);
		builder.append(", creationDate=");
		builder.append(creationDate);
		builder.append(", lastUpdate=");
		builder.append(lastUpdate);
		builder.append(", stateBindId=");
		builder.append(stateBindId);
		builder.append(", orderStateCode=");
		builder.append(orderStateCode);
		builder.append(", orderStateName=");
		builder.append(orderStateName);
		builder.append(", customerCode=");
		builder.append(customerCode);
		builder.append(", deliveryAddress=");
		builder.append(deliveryAddress);
		builder.append(", paymentName=");
		builder.append(paymentName);
		builder.append(", paymentCode=");
		builder.append(paymentCode);
		builder.append(", paymentTotal=");
		builder.append(paymentTotal);
		builder.append(", paymentStatus=");
		builder.append(paymentStatus);
		builder.append(", paidTime=");
		builder.append(paidTime);
		builder.append(", ammount_totalWithoutTax=");
		builder.append(ammount_totalWithoutTax);
		builder.append(", vatAmmount=");
		builder.append(vatAmmount);
		builder.append(", total=");
		builder.append(total);
		builder.append(", currency=");
		builder.append(currency);
		builder.append(", shippingCost=");
		builder.append(shippingCost);
		builder.append(", ShippingCostWithoutTax=");
		builder.append(ShippingCostWithoutTax);
		builder.append(", shippingTax=");
		builder.append(shippingTax);
		builder.append(", InternalComment=");
		builder.append(InternalComment);
		builder.append(", sellerNote=");
		builder.append(sellerNote);
		builder.append(", CouponDiscount=");
		builder.append(CouponDiscount);
		builder.append(", couponCode=");
		builder.append(couponCode);
		builder.append(", numberOfItems=");
		builder.append(numberOfItems);
		builder.append(", TrackingNumber=");
		builder.append(TrackingNumber);
		builder.append(", commissionId=");
		builder.append(commissionId);
		builder.append("]");
		return builder.toString();
	}
}