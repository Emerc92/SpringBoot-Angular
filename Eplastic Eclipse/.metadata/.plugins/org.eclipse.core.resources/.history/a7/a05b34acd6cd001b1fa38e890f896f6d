package it.wibs.eplastic.bindcommerceIntegration.api.obj.documents;

import java.io.Serializable;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

@JsonIgnoreProperties(ignoreUnknown = true)
public class Amounts implements Serializable{

	@JsonProperty("TotalWithoutTax")
	private double totalWithoutTax;
	
	@JsonProperty("VatAmount")
	private double vatAmount;
	
	@JsonProperty("Total")
	private double total;
	
	@JsonProperty("Currency")
	private String currency;
	
	@JsonProperty("ShippingCost")
	private double shippingCost;
	
	@JsonProperty("ShippingCostWithoutTax")
	private double shippingCostWithoutTax;
	
	@JsonProperty("ShippingTax")
	private double shippingTax;
	
	@JsonProperty("InternalComment")
	private String internalComment;

	@JsonProperty("SellerNote")
	private String sellerNote;

	@JsonProperty("CouponDiscount")
	private double couponDiscount;
	
	@JsonProperty("CouponCode")
	private String couponCode;
	
	@JsonProperty("DiscountToCart")
	private String DiscountToCart;

	public double getTotalWithoutTax() {
		return totalWithoutTax;
	}

	public void setTotalWithoutTax(double totalWithoutTax) {
		this.totalWithoutTax = totalWithoutTax;
	}

	public double getVatAmount() {
		return vatAmount;
	}

	public void setVatAmount(double vatAmount) {
		this.vatAmount = vatAmount;
	}

	public double getTotal() {
		return total;
	}

	public void setTotal(double total) {
		this.total = total;
	}

	public String getCurrency() {
		return currency;
	}

	public void setCurrency(String currency) {
		this.currency = currency;
	}

	public double getShippingCost() {
		return shippingCost;
	}

	public void setShippingCost(double shippingCost) {
		this.shippingCost = shippingCost;
	}

	public double getShippingCostWithoutTax() {
		return shippingCostWithoutTax;
	}

	public void setShippingCostWithoutTax(double shippingCostWithoutTax) {
		this.shippingCostWithoutTax = shippingCostWithoutTax;
	}

	public double getShippingTax() {
		return shippingTax;
	}

	public void setShippingTax(double shippingTax) {
		this.shippingTax = shippingTax;
	}

	public String getInternalComment() {
		return internalComment;
	}

	public void setInternalComment(String internalComment) {
		this.internalComment = internalComment;
	}

	public String getSellerNote() {
		return sellerNote;
	}

	public void setSellerNote(String sellerNote) {
		this.sellerNote = sellerNote;
	}

	public double getCouponDiscount() {
		return couponDiscount;
	}

	public void setCouponDiscount(double couponDiscount) {
		this.couponDiscount = couponDiscount;
	}

	public String getCouponCode() {
		return couponCode;
	}

	public void setCouponCode(String couponCode) {
		this.couponCode = couponCode;
	}

	public String getDiscountToCart() {
		return DiscountToCart;
	}

	public void setDiscountToCart(String discountToCart) {
		DiscountToCart = discountToCart;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Amounts [totalWithoutTax=");
		builder.append(totalWithoutTax);
		builder.append(", vatAmount=");
		builder.append(vatAmount);
		builder.append(", total=");
		builder.append(total);
		builder.append(", currency=");
		builder.append(currency);
		builder.append(", shippingCost=");
		builder.append(shippingCost);
		builder.append(", shippingCostWithoutTax=");
		builder.append(shippingCostWithoutTax);
		builder.append(", shippingTax=");
		builder.append(shippingTax);
		builder.append(", internalComment=");
		builder.append(internalComment);
		builder.append(", sellerNote=");
		builder.append(sellerNote);
		builder.append(", couponDiscount=");
		builder.append(couponDiscount);
		builder.append(", couponCode=");
		builder.append(couponCode);
		builder.append(", DiscountToCart=");
		builder.append(DiscountToCart);
		builder.append("]");
		return builder.toString();
	}
	
}
